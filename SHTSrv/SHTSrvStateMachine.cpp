/*----- PROTECTED REGION ID(SHTSrvStateMachine.cpp) ENABLED START -----*/
// kate: replace-tabs off; indent-width 4; indent-mode cstyle; remove-trailing-spaces all; tab-indents on; tab-width 4
//=============================================================================
//
// file :        SHTSrvStateMachine.cpp
//
// description : State machine file for the SHTSrv class
//
// project :     Sensiron SHT server
//
// This file is part of Tango device class.
//
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
//
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <SHTSrv.h>

/*----- PROTECTED REGION END -----*/	//	SHTSrv::SHTSrvStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================


namespace SHTSrv_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : SHTSrv::is_Temperature_allowed()
 *	Description : Execution allowed for Temperature attribute
 */
//--------------------------------------------------------
bool SHTSrv::is_Temperature_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Temperature attribute in read access.
	/*----- PROTECTED REGION ID(SHTSrv::TemperatureStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	SHTSrv::TemperatureStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SHTSrv::is_Humidity_allowed()
 *	Description : Execution allowed for Humidity attribute
 */
//--------------------------------------------------------
bool SHTSrv::is_Humidity_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Humidity attribute in read access.
	/*----- PROTECTED REGION ID(SHTSrv::HumidityStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	SHTSrv::HumidityStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SHTSrv::is_DewPoint_allowed()
 *	Description : Execution allowed for DewPoint attribute
 */
//--------------------------------------------------------
bool SHTSrv::is_DewPoint_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for DewPoint attribute in read access.
	/*----- PROTECTED REGION ID(SHTSrv::DewPointStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	SHTSrv::DewPointStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SHTSrv::is_Timestamp_allowed()
 *	Description : Execution allowed for Timestamp attribute
 */
//--------------------------------------------------------
bool SHTSrv::is_Timestamp_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Timestamp attribute in read access.
	/*----- PROTECTED REGION ID(SHTSrv::TimestampStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	SHTSrv::TimestampStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SHTSrv::is_BufferSize_allowed()
 *	Description : Execution allowed for BufferSize attribute
 */
//--------------------------------------------------------
bool SHTSrv::is_BufferSize_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for BufferSize attribute in read access.
	/*----- PROTECTED REGION ID(SHTSrv::BufferSizeStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	SHTSrv::BufferSizeStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SHTSrv::is_FormatTypes_allowed()
 *	Description : Execution allowed for FormatTypes attribute
 */
//--------------------------------------------------------
bool SHTSrv::is_FormatTypes_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for FormatTypes attribute in read access.
	/*----- PROTECTED REGION ID(SHTSrv::FormatTypesStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	SHTSrv::FormatTypesStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SHTSrv::is_FormatSizes_allowed()
 *	Description : Execution allowed for FormatSizes attribute
 */
//--------------------------------------------------------
bool SHTSrv::is_FormatSizes_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for FormatSizes attribute in read access.
	/*----- PROTECTED REGION ID(SHTSrv::FormatSizesStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	SHTSrv::FormatSizesStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : SHTSrv::is_getTemperature_allowed()
 *	Description : Execution allowed for getTemperature attribute
 */
//--------------------------------------------------------
bool SHTSrv::is_getTemperature_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for getTemperature command.
	/*----- PROTECTED REGION ID(SHTSrv::getTemperatureStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	SHTSrv::getTemperatureStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SHTSrv::is_getHumidity_allowed()
 *	Description : Execution allowed for getHumidity attribute
 */
//--------------------------------------------------------
bool SHTSrv::is_getHumidity_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for getHumidity command.
	/*----- PROTECTED REGION ID(SHTSrv::getHumidityStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	SHTSrv::getHumidityStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SHTSrv::is_getData_allowed()
 *	Description : Execution allowed for getData attribute
 */
//--------------------------------------------------------
bool SHTSrv::is_getData_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for getData command.
	/*----- PROTECTED REGION ID(SHTSrv::getDataStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	SHTSrv::getDataStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(SHTSrv::SHTSrvStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	SHTSrv::SHTSrvStateAllowed.AdditionalMethods

}	//	End of namespace
